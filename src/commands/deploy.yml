description: >
  Deploy to Firebase App Distribution.

parameters:
  app:
    type: string
    default: ""
    description: "Your app's Firebase App ID."
  binary_path:
    type: string
    default: ""
    description: "Upload binary's path"
  token:
    type: string
    default: ""
    description: "A refresh token that's printed when you authenticate your CI environment with the Firebase CLI."
  service_credentials_file:
    type: string
    default: ""
    description: "Service account file when you authenticate your CI environment with the Firebase CLI."
  release_note:
    type: string
    default: ""
    description: "Release notes for this build."
  release_note_file:
    type: string
    default: ""
    description: "Release notes for this build."
  testers:
    type: string
    default: ""
    description: "The email addresses of the testers you want to invite. You can specify the testers as a comma-separated list of email addresses."
  testers-file:
    type: string
    default: ""
    description: "The email addresses of the testers you want to invite. You can specify the path to a plain text file containing a comma-separated list of email addresses."
  groups:
    type: string
    default: ""
    description: "The tester groups you want to invite. Groups are specified using group aliases, which you can look up in the Firebase console. You can specify the groups as a comma-separated list."
  groups_file:
    type: string
    default: ""
    description: "The tester groups you want to invite. Groups are specified using group aliases, which you can look up in the Firebase console. You can specify the path to a plain text file containing a comma-separated list of group names."
  is_debug:
    type: boolean
    default: false
    description: "A flag you can include to print verbose log output."

steps:
  - run:
      name: Install Firebase Tools
      command: npm install -g firebase-tools
  - when:
      condition:
        not:
          equal:
            - ""
            - << parameters.service_credentials_file >>
      steps:
        - run:
            name: "Setup "
            command: echo "export GOOGLE_APPLICATION_CREDENTIALS=\"<< parameters.service_credentials_file >>\"" >> "${BASH_ENV}"
  - run:
      name: Deploy to Firebase App Distribution
      command: |
        cmd="firebase appdistribution:distribute << parameters.binary_path >>"
        if [[ -n << parameters.token >>]]; then
          cmd="${cmd} --token << parameters.token >>"
        fi
        if [[ -n << parameters.service_credentials_file >> ]]; then
          echo
        fi
        if [[ -n << parameters.release_note >> ]]; then
          cmd="${cmd} --release-note << parameters.release_note >>"
        fi
        if [[ -n << parameters.release_note_file >> ]]; then
          cmd="${cmd} --release-note-file << parameters.release_note_file >>"
        fi
        if [[ -n << parameters.testers >> ]]; then
          cmd="${cmd} --testers << parameters.testers >>"
        fi
        if [[ -n << parameters.testers_file >> ]]; then
          cmd="${cmd} --testers_file << parameters.testers_file >>"
        fi
        if [[ -n << parameters.groups >> ]]; then
          cmd="${cmd} --groups << parameters.groups >>"
        fi
        if [[ -n << parameters.groups_file >> ]]; then
          cmd="${cmd} --groups_file << parameters.groups_file >>"
        fi
        if [[ << parameters.is_debug >> = true ]]; then
          cmd="${cmd} --debug"
        fi

        eval "${cmd}"

        if [[ $? -eq 0 ]]; then
          echo "Success"
        else
          echo "Fail"
        fi
